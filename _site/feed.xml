<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://arc-bphc.github.io/site/feed.xml" rel="self" type="application/atom+xml" /><link href="https://arc-bphc.github.io/site/" rel="alternate" type="text/html" /><updated>2021-07-14T12:49:47+05:30</updated><id>https://arc-bphc.github.io/site/feed.xml</id><title type="html">Automation &amp;amp; Robotics Club</title><subtitle>Automation &amp; Robotics Club, BITS Pilani Hyderabad Campus
</subtitle><author><name>Automation  &amp; Robotics Club</name><email>arc@hyderabad.bits-pilani.ac.in</email></author><entry><title type="html">Servo Motors PWM</title><link href="https://arc-bphc.github.io/site/2018/04/05/blog-Servo-PWM.html" rel="alternate" type="text/html" title="Servo Motors PWM" /><published>2018-04-05T00:00:00+05:30</published><updated>2018-04-05T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2018/04/05/blog-Servo-PWM</id><content type="html" xml:base="https://arc-bphc.github.io/site/2018/04/05/blog-Servo-PWM.html">&lt;h2 id=&quot;aim&quot;&gt;Aim&lt;/h2&gt;
&lt;p&gt;Explore the working of the servo library.
&lt;!--more--&gt;&lt;/p&gt;
&lt;h2 id=&quot;story&quot;&gt;Story&lt;/h2&gt;
&lt;p&gt;While playing with servo motors, I came across an interesting concept of pulse width modulation connected to the servo motors which I will be discussing here.
Servo library has to be called and an object has to be made in the Arduino IDE for controlling the servo motor. Once we do that we use object_name.write() and specify the angle which the servo should be turned to. Servo control is actually achieved by sending a PWM signal to the servo motor. But since there are only 6 PWM pins on the Arduino Uno does that mean we can connect only 6 servos to it ?&lt;/p&gt;

&lt;p&gt;For comparison I used the same servo on both PWM as well as non-PWM pins on the Arduino and there was no visible performance difference ! If PWM is used by servos, there has to be a difference ! So whats the hack then ?&lt;/p&gt;

&lt;p&gt;The key to this is the fact that the Servo library does not use PWM !! The servo pulses are 1ms long. Therefore they must be driven by the frequencies around 1 kHz which is very easy to generate by the software. When we call the write() function, it computes a pulse width in micro seconds and stores it in a global array. Then there is a single timer that regularly triggers an interrupt which changes the output signals according to each channel’s desired pulse width. Hence, the Servo library uses standard means to change the state of the pins just as we do Bit-Banging !&lt;/p&gt;

&lt;p&gt;The Servo library supports up to 12 servos on most of the Arduino boards using only one timer. It can actually run servos on all pins simultaneously !&lt;/p&gt;</content><author><name>Yug Ajmera</name></author><category term="arduino" /><category term="Servo" /><category term="PWM" /><summary type="html">Aim Explore the working of the servo library.</summary></entry><entry><title type="html">Our Team</title><link href="https://arc-bphc.github.io/site/site/team" rel="alternate" type="text/html" title="Our Team" /><published>2018-04-05T00:00:00+05:30</published><updated>2018-04-05T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/site/post_slug</id><content type="html" xml:base="https://arc-bphc.github.io/site/site/team">&lt;style&gt;
@font-face {
    font-family: 'FontAwesome';
    src: url(assets/fonts/fontawesome-webfont.eot?v=4.7.0);
    src: url(assets/fonts/fontawesome-webfont.eot?#iefix&amp;v=4.7.0) format(&quot;embedded-opentype&quot;), url(assets/fonts/fontawesome-webfont.woff2?v=4.7.0) format(&quot;woff2&quot;), url(assets/fonts/fontawesome-webfont.woff?v=4.7.0) format(&quot;woff&quot;), url(assets/fonts/fontawesome-webfont.ttf?v=4.7.0) format(&quot;truetype&quot;), url(assets/fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular) format(&quot;svg&quot;);
    font-weight: 400;
    font-style: normal
}

    .card {
    /* Add shadows to create the &quot;card&quot; effect */
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3);
    transition: 0.3s;
    border-radius: 5px;
    /* 5px rounded corners */
    width: 15%;
    height: 25%;
    display: inline-block;
    margin: 7px;
}


/* On mouse-over, add a deeper shadow */

.card:hover {
    box-shadow: 0 8px 16px 0 rgba(255, 255, 255, 0.15);
}


/* Add some padding inside the card container */

div.container {
    padding: 1px 3px;
    position: relative;
    bottom : 10px;
    /* border-radius: 25px 25px 0 0; */
}


/* Add rounded corners to the top left and the top right corner of the image */

.card img {
    border-radius: 15px 15px 0 0;
    display: inline-block;
}
.user {
    text-align: center;
    font-size: 25px;
    display: inline-flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
}

.user p {
    font-size: 16px
}

@media only screen and (min-width:550px) {
    .user {
        flex-wrap: nowrap;
}
.user-details {
    text-align: left;
    font-size : 25px; 
    margin: 5px auto;
}

.icon-small {
    color: #fff;
    text-align: center
}

.header-icons-small {
    display: flex;
    justify-content: left;
    text-align: center
}

.header-icons-small .icon-small {
    height: 25px;
    padding: 5px;
    border-radius: 50%;
    border: 2px solid #fff;
    transition: all .7s;
    width: 23px;
    font-size: 30px;
    margin: 5px
}

.header-icons-small .icon-small:active,
.header-icons-small .icon-small:hover {
    color: #1a222c;
    background: #fff
}

.header-icons .icon:active,
.header-icons .icon:hover {
    color: #1a222c;
    background: #fff
}

@media only screen and (min-width:550px) {
    .header-icons-small .icon-small {
        width: 19px;
        height: 15px;
        font-size: 21px;
        position: relative;
        bottom: 5px;
        left : 17px;
    }
}
.fa {
    display: inline-block;
    font: 14px &quot;FontAwesome&quot;;
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale
}
.fa-envelope:before {
    content: &quot;\f0e0&quot;
}
.fa-github-alt:before {
    content: &quot;\f113&quot;
}
.fa-facebook-square:before {
    content: &quot;\f082&quot;
}


.icon-small {
    color: #fff;
    text-align: center
}

.header-icons-small {
    display: flex;
    justify-content: left;
    text-align: center
}

.header-icons-small .icon-small {
    height: 20px;
    padding: 5px;
    border-radius: 50%;
    border: 2px solid #fff;
    transition: all .7s;
    width: 20px;
    font-size: 10px;
    margin: 5px
}

.header-icons-small .icon-small:active,
.header-icons-small .icon-small:hover {
    color: #1a222c;
    background: #fff
}

.header-icons .icon:active,
.header-icons .icon:hover {
    color: #1a222c;
    background: #fff
}


&lt;/style&gt;

&lt;div class=&quot;user-details&quot;&gt;
    Our Team 
&lt;/div&gt;
&lt;div class=&quot;user&quot;&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;user&quot;&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;user&quot;&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;card&quot;&gt;
        &lt;img src=&quot;https://github.com/TextZip.png&quot; alt=&quot;Avatar&quot; style=&quot;width:100%&quot; /&gt;
        &lt;div class=&quot;container&quot;&gt;
            &lt;h5&gt;&lt;b&gt;Jai Krishna&lt;/b&gt;&lt;/h5&gt;
            &lt;p&gt;Some Intro&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&quot;header-icons-small&quot;&gt;
            &lt;a aria-label=&quot;Send email&quot; href=&quot;mailto:textzip@gmail.com&quot;&gt;&lt;i class=&quot;icon-small fa fa-envelope&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Github&quot; target=&quot;_blank&quot; href=&quot;https://github.com/TextZip&quot;&gt;&lt;i class=&quot;icon-small fa fa-github-alt&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
            &lt;a aria-label=&quot;My Facebook&quot; target=&quot;_blank&quot; href=&quot;https://www.facebook.com/jai.krishna.7982&quot;&gt;&lt;i class=&quot;icon-small fa fa-facebook-square&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;</content><author><name>Automation  &amp; Robotics Club</name><email>arc@hyderabad.bits-pilani.ac.in</email></author><summary type="html">Our Team Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro Jai Krishna Some Intro</summary></entry><entry><title type="html">Secret Clap Door Lock</title><link href="https://arc-bphc.github.io/site/2018/02/18/blog-Secret-Clap-door-lock.html" rel="alternate" type="text/html" title="Secret Clap Door Lock" /><published>2018-02-18T00:00:00+05:30</published><updated>2018-02-18T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2018/02/18/blog-Secret-Clap-door-lock</id><content type="html" xml:base="https://arc-bphc.github.io/site/2018/02/18/blog-Secret-Clap-door-lock.html">&lt;h2 id=&quot;aim&quot;&gt;Aim&lt;/h2&gt;
&lt;p&gt;To build a secret door lock that can be unlocked via clap.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;hardware-used&quot;&gt;Hardware Used&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Arduino Uno&lt;/li&gt;
  &lt;li&gt;Bread Board&lt;/li&gt;
  &lt;li&gt;LED ( any color)&lt;/li&gt;
  &lt;li&gt;Resistor ( 10K )&lt;/li&gt;
  &lt;li&gt;Jumper wire (for conncetions )&lt;/li&gt;
  &lt;li&gt;Sound sensor module&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sound-sensor-module--&quot;&gt;Sound sensor module :-&lt;/h3&gt;
&lt;p&gt;The sound sensor module provides an easy way to detect sound and is generally
used for detecting sound intensity. This module can be used for security, switch, and
monitoring applications. Its accuracy can be easily adjusted for the convenience of
usage.
It uses a microphone which supplies the input to an amplifier, peak detector and
buffer. When the sensor detects a sound, it processes an output signal voltage which is
sent to a microcontroller then performs necessary processing.
&lt;img src=&quot;/site/assets/images/blog/Secret-Clap-door/1.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;software--working&quot;&gt;Software &amp;amp; Working&lt;/h2&gt;
&lt;p&gt;Here we are glowing an LED instead of opening a lock for simplicity. You can use a servo motor to open a lock. If a particular pattern of claps is detected , only then the lock will open . For this we are using a sound sensor module. In normal state , the sensor gives HIGH . As soon as a clap is detected , it gives LOW .&lt;/p&gt;

&lt;p&gt;Access the code &lt;a href=&quot;http://yainnoware.blogspot.in/p/secret-clap-door-lock.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;extensions extensions--video&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/toYhCtMNnYs?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Yug Ajmera</name></author><category term="arduino" /><category term="LM7805" /><category term="l293d" /><category term="hc05" /><category term="bluetooth" /><summary type="html">Aim To build a secret door lock that can be unlocked via clap.</summary></entry><entry><title type="html">Voice Controlled Car</title><link href="https://arc-bphc.github.io/site/2018/02/18/blog-Voice-Controlled-Car.html" rel="alternate" type="text/html" title="Voice Controlled Car" /><published>2018-02-18T00:00:00+05:30</published><updated>2018-02-18T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2018/02/18/blog-Voice-Controlled-Car</id><content type="html" xml:base="https://arc-bphc.github.io/site/2018/02/18/blog-Voice-Controlled-Car.html">&lt;h2 id=&quot;aim&quot;&gt;Aim&lt;/h2&gt;
&lt;p&gt;To build a bluetooth operated voice controlled car.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;hardware-used&quot;&gt;Hardware Used&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Arduino Uno&lt;/li&gt;
  &lt;li&gt;Bread Board&lt;/li&gt;
  &lt;li&gt;Motors x 2&lt;/li&gt;
  &lt;li&gt;Wheels x 2&lt;/li&gt;
  &lt;li&gt;Chassis ( of appropriate size )&lt;/li&gt;
  &lt;li&gt;Voltage Regulator LM 7805&lt;/li&gt;
  &lt;li&gt;Motor Driver L293D&lt;/li&gt;
  &lt;li&gt;12V Batter ( Power source)&lt;/li&gt;
  &lt;li&gt;Jumper Wires&lt;/li&gt;
  &lt;li&gt;Bluetooth Module HC-05&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;about-bluetooth-module-hc-05&quot;&gt;About Bluetooth Module HC-05&lt;/h3&gt;
&lt;p&gt;In our world of embedded electronics hackery, Bluetooth serves as an excellent protocol for wirelessly transmitting relatively small amounts of data over a short range (&amp;lt;100m). It’s perfectly suited as a wireless replacement for serial communication interfaces.&lt;/p&gt;

&lt;p&gt;HC‐05 module is an easy to use Bluetooth SPP (Serial Port Protocol) module, designed for transparent wireless serial connection setup. The module has two modes of operation, Command Mode where we can send AT commands to it and Data Mode where it transmits and receives data to another Bluetooth module.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/site/assets/images/blog/Voice-Controlled-Car/1.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;about-voltage-regulator-lm-7805&quot;&gt;About Voltage Regulator LM 7805&lt;/h3&gt;
&lt;p&gt;Voltage sources in a circuit may have fluctuations resulting in not providing fixed voltage outputs. A voltage regulator IC maintains the output voltage at a constant value. 7805 IC, a member of 78xx series of fixed linear voltage regulators used to maintain such fluctuations, is a popular voltage regulator integrated circuit (IC).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/site/assets/images/blog/Voice-Controlled-Car/2.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;about-motor-driver-l293d&quot;&gt;About Motor Driver L293D&lt;/h3&gt;
&lt;p&gt;L293D is a typical Motor driver or Motor Driver IC which allows DC motor to drive on either direction. L293D is a 16-pin IC which can control a set of two DC motors simultaneously in any direction. It works on the concept of H-bridge. H-bridge is a circuit which allows the voltage to be flown in either direction.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/site/assets/images/blog/Voice-Controlled-Car/3.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;software--working&quot;&gt;Software &amp;amp; Working&lt;/h2&gt;
&lt;p&gt;We connect the Bluetooth module with the mobile app. Once done, the commands which we give through the mobile get sent to the Arduino via the module. We accept character by character from the serial buffer sent by the app and combine them to form a string.&lt;/p&gt;

&lt;p&gt;We then compare it to the command. If it matches the command is carried out. For example, the string we receive is “right” ,the bot turns right.&lt;/p&gt;

&lt;p&gt;The code for the same are available &lt;a href=&quot;http://yainnoware.blogspot.in/p/voice-controlled-car.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;extensions extensions--video&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/q5I7UFtxVUY?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Yug Ajmera</name></author><category term="arduino" /><category term="LM7805" /><category term="l293d" /><category term="hc05" /><category term="bluetooth" /><summary type="html">Aim To build a bluetooth operated voice controlled car.</summary></entry><entry><title type="html">EasyMouse</title><link href="https://arc-bphc.github.io/site/2018/01/30/blog-Easy-Mouse.html" rel="alternate" type="text/html" title="EasyMouse" /><published>2018-01-30T00:00:00+05:30</published><updated>2018-01-30T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2018/01/30/blog-Easy-Mouse</id><content type="html" xml:base="https://arc-bphc.github.io/site/2018/01/30/blog-Easy-Mouse.html">&lt;h2 id=&quot;aim&quot;&gt;AIM&lt;/h2&gt;
&lt;p&gt;Carpal Tunnel syndrome is a common problem with people who are involved in desk-work, working with a traditionally designed mouse, or a pointing device to be more specific. EasyMouse aims to make a pointing device optimised for gaming, based solely on gestures. As a result, Carpal Tunnel Syndrome is avoided in the long run.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/site/assets/images/blog/thumbnails/EasyMouse.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ARDUINO NANO&lt;/li&gt;
  &lt;li&gt;ADXL345&lt;/li&gt;
  &lt;li&gt;MPU-6050&lt;/li&gt;
  &lt;li&gt;nRF24L01(for the wireless communication)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;adxl345&quot;&gt;ADXL345&lt;/h3&gt;
&lt;p&gt;ADXL345  is a small, thin, ultralow power, 3-axis accelerometer with high resolution (13-bit) measurement at up to ±16 g.  The ADXL345 is well suited for mobile device applications. It measures the static acceleration of gravity in tilt-sensing applications, as well as dynamic acceleration resulting from motion or shock. Its high resolution  (3.9mg/LSB) enables measurement of inclination changes less than 1.0°.&lt;/p&gt;

&lt;h3 id=&quot;nrf24l01&quot;&gt;nRF24L01&lt;/h3&gt;
&lt;p&gt;nRF24L01 is a single chip radio transceiver for the world wide 2.4 – 2.5 GHz ISM
band. The transceiver consists of a fully integrated frequency synthesizer, a power
amplifier, a crystal oscillator, a demodulator, modulator and Enhanced ShockBurst™
protocol engine. Output power, frequency channels, and protocol setup are easily
programmable through a SPI interface. Current consumption is very low.&lt;/p&gt;

&lt;h2 id=&quot;working&quot;&gt;Working&lt;/h2&gt;
&lt;p&gt;The ‘driver’  which is written in Python, receives instruction packets from the Arduino and uses pyautogui to perform GUI operations. Since this is a custom mouse, a gesture can be programmed to trigger, for example, 5 mouse-clicks in 250 milliseconds.
Similarly, another gesture can be programmed to trigger a series of perfectly timed combination of keystrokes and mouse-clicks, which are useful in hitting combos in games like Mortal Kombat.General pointing and cursor movement will also have greater precision and sensitivity, all of which can be customised according to personal preference.&lt;/p&gt;

&lt;p&gt;All files related to this project are &lt;a href=&quot;https://github.com/akhilrb/easymouse&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Akhil Raj Baranwal</name></author><category term="arduino" /><category term="ADXL345" /><category term="IMU" /><category term="mpu6050" /><category term="nrf24l01" /><summary type="html">AIM Carpal Tunnel syndrome is a common problem with people who are involved in desk-work, working with a traditionally designed mouse, or a pointing device to be more specific. EasyMouse aims to make a pointing device optimised for gaming, based solely on gestures. As a result, Carpal Tunnel Syndrome is avoided in the long run.</summary></entry><entry><title type="html">Music Visualisation</title><link href="https://arc-bphc.github.io/site/2017/11/03/blog-Music-Visualisation.html" rel="alternate" type="text/html" title="Music Visualisation" /><published>2017-11-03T00:00:00+05:30</published><updated>2017-11-03T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2017/11/03/blog-Music-Visualisation</id><content type="html" xml:base="https://arc-bphc.github.io/site/2017/11/03/blog-Music-Visualisation.html">&lt;h2 id=&quot;aim&quot;&gt;Aim&lt;/h2&gt;
&lt;p&gt;To filter the incoming audio signal and see how each coloured LED of RGB 3528 SMD strip reacts to different frequencies of the signal.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Arduino Uno(1)&lt;/li&gt;
  &lt;li&gt;RGB 3528 LED Strip(1)&lt;/li&gt;
  &lt;li&gt;TIP31C NPN transistor(3)&lt;/li&gt;
  &lt;li&gt;Electret Microphone(1)&lt;/li&gt;
  &lt;li&gt;12V Battery(1)&lt;/li&gt;
  &lt;li&gt;470 Ω resistors(3)&lt;/li&gt;
  &lt;li&gt;10 µF capacitor(1)&lt;/li&gt;
  &lt;li&gt;100nF capacitor(1)&lt;/li&gt;
  &lt;li&gt;LM3528 op-amp(1)&lt;/li&gt;
  &lt;li&gt;1KΩ resistor(2)&lt;/li&gt;
  &lt;li&gt;10KΩ resistor(2)&lt;/li&gt;
  &lt;li&gt;100KΩ resistor(1)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;working&quot;&gt;Working&lt;/h2&gt;
&lt;p&gt;The project basically consists of 3 stages:-&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Constructing a pre-amplifier mic circuit&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Taking the mic signals as the input in the Arduino and filtering it into three frequency ranges using the FIR filter implemented in the code itself.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Building the LED circuit and using the filtered outputs to control the brightness of the  LEDs.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;building-the-pre-amp-mic-circuit&quot;&gt;Building The Pre-Amp Mic Circuit&lt;/h3&gt;
&lt;p&gt;To amplify the voltage signals of the electret mic, op-amp(LM 358) was used. Op-amps were preferred over NPN transistors because of the high voltage gain of the op-amps. Fundamentally, an op-amp is an equivalent of many transistors and so, has a higher performance .&lt;/p&gt;

&lt;p&gt;The inverting AC amplifier configuration was used which mean that there is inversion of the output signal with respect to the input as it is 180o out of phase. This is the circuit diagram for it :-
&lt;img src=&quot;/site/assets/images/blog/Music-Visualisation/1.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The V_OUT_UC goes into the Arduino. The V_OUT is for connecting earphones directly.&lt;/p&gt;

&lt;p&gt;Voltage gain for an inverting amplifier is given by the inverting operational amplifier gain equation&lt;/p&gt;

&lt;p&gt;Here, the voltage gain is given by -R5/R4. Using R5 as 100K and R4 as 1K, a voltage gain of 100x was achieved.&lt;/p&gt;

&lt;p&gt;A graphical representation of the op-amp circuit is here
&lt;img src=&quot;/site/assets/images/blog/Music-Visualisation/2.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here, an electrolytic Microphone Coupling Capacitor has been used. A coupling capacitor is generally used in audio circuits to keep the DC and AC signals apart. DC is used give power to the parts of the circuit while the incoming audio signal will be AC. Since a capacitor blocks low frequencies and allows high frequencies, it can be used to block the DC signals and allowing only AC signals to pass through, effectively decreasing the noise.                                                                                                                                                   The next interesting component is the ceramic Power Supply Decoupling Capacitor which protects the ICs by suppressing the high frequency signals in the power supply signals.                                                                                                                                         The power supply is taken from the 5V  of the Arduino.&lt;/p&gt;

&lt;p&gt;The reading on the serial plotter look like this :-
&lt;img src=&quot;/site/assets/images/blog/Music-Visualisation/3.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/site/assets/images/blog/Music-Visualisation/4.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-rgb-led-strip-circuit&quot;&gt;The RGB LED Strip Circuit&lt;/h3&gt;
&lt;p&gt;This strip works on 12V. Since the Arduino cannot provide 12V, NPN transistors (TIP31Cs) have been used.&lt;/p&gt;

&lt;p&gt;The PWM voltage output pins of the Arduino, which control the brightness, are connected to the base, the LED strip to the collector and the emitter to the ground.&lt;/p&gt;

&lt;p&gt;This is the graphical representation of the circuit:-
&lt;img src=&quot;/site/assets/images/blog/Music-Visualisation/5.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-code-for-sampling-and-filtering&quot;&gt;The Code for Sampling and Filtering&lt;/h3&gt;
&lt;p&gt;The Arduino Uno clock is at 16MHz.
The ADC clock is at (16/prescaler) where the prescalar can be 16,32,64 or 128.
One ADC conversion takes 13 ADC clocks.
According to the Atmega328p datasheet, the recommended ADC clock should be between 50KHz and 200KHz. So, by default, the prescaler is set to 128, which, would in turn give us a sampling rate of approximately 9600 Hz. But to get 8KHz analyzable spectrum one needs to sample at 16KHz according to Nyquist theorem. So, in the code, the prescaler is set to 64 so that  a sampling rate of 17800 Hz(almost 16KHz) is got.&lt;/p&gt;

&lt;p&gt;After sampling at 17800 Hz, filter the signal through digital &lt;a href=&quot;https://en.wikipedia.org/wiki/Finite_impulse_response&quot;&gt;FIR filters&lt;/a&gt;.
&lt;a href=&quot;https://github.com/gaurabdg/FIR-Spectrum-Analyzer/blob/master/src/matlab/FIR_FilterDesign.m&quot;&gt;This MATLAB code&lt;/a&gt; was used to generate the FIR coefficients.&lt;/p&gt;

&lt;p&gt;The cut-off frequencies for the filters were calculated by playing tracks and observing the most active frequency ranges on &lt;a href=&quot;https://trueaudio.com/rta_abt1.htm&quot;&gt;trueRTA&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gaurabdg/FIR-Spectrum-Analyzer/blob/master/src/arduino/BeatDet.ino&quot;&gt;This is the link to the Arduino Code.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just a few snaps
&lt;img src=&quot;/site/assets/images/blog/Music-Visualisation/6.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;
&lt;img src=&quot;/site/assets/images/blog/Music-Visualisation/7.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;extensions extensions--video&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/zxZnOtWrG0c?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Gaurab Dasgupta</name></author><category term="arduino" /><category term="3528 LED" /><category term="NPN" /><category term="op-amp" /><summary type="html">Aim To filter the incoming audio signal and see how each coloured LED of RGB 3528 SMD strip reacts to different frequencies of the signal.</summary></entry><entry><title type="html">ESP8266 based temperature logger</title><link href="https://arc-bphc.github.io/site/2017/01/25/blog-ESP8266-temp.html" rel="alternate" type="text/html" title="ESP8266 based temperature logger" /><published>2017-01-25T00:00:00+05:30</published><updated>2017-01-25T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2017/01/25/blog-ESP8266-temp</id><content type="html" xml:base="https://arc-bphc.github.io/site/2017/01/25/blog-ESP8266-temp.html">&lt;h2 id=&quot;aim&quot;&gt;Aim&lt;/h2&gt;
&lt;p&gt;To make an ESP8266 based temperature logger that can send temperature to an online website/database.
&lt;!--more--&gt;&lt;/p&gt;
&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;ESP8266 WiFi Module&lt;/li&gt;
  &lt;li&gt;Arduino Uno&lt;/li&gt;
  &lt;li&gt;DS18B20 Temperature sensor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;working&quot;&gt;Working&lt;/h2&gt;
&lt;p&gt;The ESP8266 WiFi module is loaded with the code for the Temperature sensor. DS18B20 is a digital temperature sensor which uses the onewire library to communicate to the ESP8266 module. The module is connected to the WiFi router in the room for internet access. The ESP uses HTTP 1.1 protocol to relay data to the thingsspeak website using its IP address and the path given by the website for a new data stream. Once the server is connected, the data is sent and the connection is closed until the next time. This is repeated as a loop to update the data received from the sensor i.e. temperature on the website.&lt;/p&gt;

&lt;p&gt;Thingsspeak offers a channel to see the data in real-time and in a graphical format with proper plots.&lt;/p&gt;

&lt;div class=&quot;swiper swiper-demo&quot;&gt;
  &lt;div class=&quot;swiper__wrapper&quot;&gt;
    &lt;div class=&quot;swiper__slide&quot;&gt;&lt;img class=&quot;image image&quot; src=&quot;/site/assets/images/blog/ESP8266-temp-sensor/1.png&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;swiper__slide&quot;&gt;&lt;img class=&quot;image image&quot; src=&quot;/site/assets/images/blog/ESP8266-temp-sensor/2.png&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;swiper__slide&quot;&gt;&lt;img class=&quot;image image&quot; src=&quot;/site/assets/images/blog/thumbnails/ESP8266 based temperature logger.png&quot; /&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;swiper__button swiper__button--prev fas fa-chevron-left&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;swiper__button swiper__button--next fas fa-chevron-right&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;style&gt;
.swiper-demo {
  height: auto;
}
&lt;/style&gt;

&lt;script&gt;(function() {
  var SOURCES = window.TEXT_VARIABLES.sources;
  window.Lazyload.js(SOURCES.jquery, function() {
    function swiper(options) {
      var $window = $(window), $root = this, $swiperWrapper, $swiperSlides, $swiperButtonPrev, $swiperButtonNext,
        initialSlide, animation, onChange, onChangeEnd,
        rootWidth, count, preIndex, curIndex, translateX, CRITICAL_ANGLE = Math.PI / 3;

      function setOptions(options) {
        var _options = options || {};
        initialSlide = _options.initialSlide || 0;
        animation = _options.animation === undefined &amp;&amp; true;
        onChange = onChange || _options.onChange;
        onChangeEnd = onChangeEnd || _options.onChangeEnd;
      }

      function init() {
        $swiperWrapper = $root.find('.swiper__wrapper');
        $swiperSlides = $root.find('.swiper__slide');
        $swiperButtonPrev = $root.find('.swiper__button--prev');
        $swiperButtonNext = $root.find('.swiper__button--next');
        animation &amp;&amp; $swiperWrapper.addClass('swiper__wrapper--animation');
        calc(true);
      }

      function preCalc() {
        rootWidth = $root.width();
        count = $swiperWrapper.children('.swiper__slide').length;
        if (count &lt; 2) {
          $swiperButtonPrev.addClass('d-none');
          $swiperButtonNext.addClass('d-none');
        }
        curIndex = initialSlide || 0;
        translateX = getTranslateXFromCurIndex();
      }

      var calc = (function() {
        var preAnimation, $swiperSlide, $preSwiperSlide;
        return function (needPreCalc, params) {
          needPreCalc &amp;&amp; preCalc();
          var _animation = (params &amp;&amp; params.animation !== undefined) ? params.animation : animation;
          if (preAnimation === undefined || preAnimation !== _animation) {
            preAnimation = _animation ? $swiperWrapper.addClass('swiper__wrapper--animation') :
              $swiperWrapper.removeClass('swiper__wrapper--animation');
          }
          if (preIndex !== curIndex) {
            ($preSwiperSlide = $swiperSlides.eq(preIndex)).removeClass('active');
            ($swiperSlide = $swiperSlides.eq(curIndex)).addClass('active');
            onChange &amp;&amp; onChange(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
            if (onChangeEnd) {
              if (_animation) {
                setTimeout(function() {
                  onChangeEnd(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
                }, 400);
              } else {
                onChangeEnd(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
              }
            }
            preIndex = curIndex;
          }
          $swiperWrapper.css('transform', 'translate(' + translateX + 'px, 0)');
          if (count &gt; 1) {
            if (curIndex &lt;= 0) {
              $swiperButtonPrev.addClass('disabled');
            } else {
              $swiperButtonPrev.removeClass('disabled');
            }
            if (curIndex &gt;= count - 1) {
              $swiperButtonNext.addClass('disabled');
            } else {
              $swiperButtonNext.removeClass('disabled');
            }
          }
        };
      })();

      function getTranslateXFromCurIndex() {
        return curIndex &lt;= 0 ? 0 : - rootWidth * curIndex;
      }

      function moveToIndex(index ,params) {
        preIndex = curIndex;
        curIndex = index;
        translateX = getTranslateXFromCurIndex();
        calc(false, params);
      }

      function move(type) {
        var nextIndex = curIndex, unstableTranslateX;
        if (type === 'prev') {
          nextIndex &gt; 0 &amp;&amp; nextIndex--;
        } else if (type === 'next') {
          nextIndex &lt; count - 1 &amp;&amp; nextIndex++;
        }
        if (type === 'cur') {
          moveToIndex(curIndex, { animation: true });
          return;
        }
        unstableTranslateX = translateX % rootWidth !== 0;
        if (nextIndex !== curIndex || unstableTranslateX) {
          unstableTranslateX ? moveToIndex(nextIndex, { animation: true }) : moveToIndex(nextIndex);
        }
      }

      setOptions(options);
      init();
      preIndex = curIndex;

      $swiperButtonPrev.on('click', function(e) {
        e.stopPropagation();
        move('prev');
      });
      $swiperButtonNext.on('click', function(e) {
        e.stopPropagation();
        move('next');
      });
      $window.on('resize', function() {
        calc(true, { animation: false });
      });

      (function() {
        var pageX, pageY, velocityX, preTranslateX = translateX, timeStamp, touching;
        function handleTouchstart(e) {
          var point = e.touches ? e.touches[0] : e;
          pageX = point.pageX;
          pageY = point.pageY;
          velocityX = 0;
          preTranslateX = translateX;
        }
        function handleTouchmove(e) {
          if (e.touches &amp;&amp; e.touches.length &gt; 1) {
            return;
          }
          var point = e.touches ? e.touches[0] : e;
          var deltaX = point.pageX - pageX;
          var deltaY = point.pageY - pageY;
          velocityX = deltaX / (e.timeStamp - timeStamp);
          timeStamp = e.timeStamp;
          if (e.cancelable &amp;&amp; Math.abs(Math.atan(deltaY / deltaX)) &lt; CRITICAL_ANGLE) {
            touching = true;
            translateX += deltaX;
            calc(false, { animation: false });
          }
          pageX = point.pageX;
          pageY = point.pageY;
        }
        function handleTouchend() {
          touching = false;
          var deltaX = translateX - preTranslateX;
          var distance = deltaX + velocityX * rootWidth;
          if (Math.abs(distance) &gt; rootWidth / 2) {
            distance &gt; 0 ? move('prev') : move('next');
          } else {
            move('cur');
          }
        }
        $swiperWrapper.on('touchstart', handleTouchstart);
        $swiperWrapper.on('touchmove', handleTouchmove);
        $swiperWrapper.on('touchend', handleTouchend);
        $swiperWrapper.on('touchcancel', handleTouchend);

        (function() {
          var pressing = false, moved = false;
          $swiperWrapper.on('mousedown', function(e) {
            pressing = true; handleTouchstart(e);
          });
          $swiperWrapper.on('mousemove', function(e) {
            pressing &amp;&amp; (e.preventDefault(), moved = true, handleTouchmove(e));
          });
          $swiperWrapper.on('mouseup', function(e) {
            pressing &amp;&amp; (pressing = false, handleTouchend(e));
          });
          $swiperWrapper.on('mouseleave', function(e) {
            pressing &amp;&amp; (pressing = false, handleTouchend(e));
          });
          $swiperWrapper.on('click', function(e) {
            moved &amp;&amp; (e.stopPropagation(), moved = false);
          });
        })();

        $root.on('touchmove', function(e) {
          if (e.cancelable &amp; touching) {
            e.preventDefault();
          }
        });
      })();

      return {
        setOptions: setOptions,
        previous: function(){
          move('prev');
        },
        next: function(){
          move('next');
        },
        refresh: function() {
          calc(true, { animation: false });
        }
      };
    }
    $.fn.swiper = swiper;
  });
})();
var SOURCES = window.TEXT_VARIABLES.sources;
window.Lazyload.js(SOURCES.jquery, function() {
  $('.swiper-demo').swiper();
});
&lt;/script&gt;</content><author><name>Parakh M. Gupta</name></author><category term="drawing" /><category term="arm" /><category term="arduino" /><category term="servo" /><summary type="html">Aim To make an ESP8266 based temperature logger that can send temperature to an online website/database.</summary></entry><entry><title type="html">Wall Follower</title><link href="https://arc-bphc.github.io/site/2016/12/31/blog-Wall-Follower.html" rel="alternate" type="text/html" title="Wall Follower" /><published>2016-12-31T00:00:00+05:30</published><updated>2016-12-31T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2016/12/31/blog-Wall-Follower</id><content type="html" xml:base="https://arc-bphc.github.io/site/2016/12/31/blog-Wall-Follower.html">&lt;h2 id=&quot;aim&quot;&gt;Aim&lt;/h2&gt;
&lt;p&gt;To follow a wall (The wall refers to a boundary line of any shape) .The robot has to simply follow the wall wherever the wall leads to, the robot must go there.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;hardware-used&quot;&gt;Hardware Used&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Arduino Uno.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Breadboard.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ultrasound Sensors(X3).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;12 Volt Battery.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;L293d Motor Driver Chip With Breakout Board.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;150 RPM Motors.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Chassis (2 Wheel).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Regular Size Castor Wheel.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/site/assets/images/blog/thumbnails/Wall Follower.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;working&quot;&gt;WORKING&lt;/h2&gt;
&lt;p&gt;This Robot Uses 3 Ultrasound Sensors(Left(l),Right(r),Center(c)).The Robot first moves forward.If the distance measured between any of the sensors and a wall is less than 12 cm then it means that a wall is found(sensor is active) and this has to followed. The robot responds in the way that is given in the table below.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SENSOR ACTIVE&lt;/th&gt;
      &lt;th&gt;RESPONSE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;c only&lt;/td&gt;
      &lt;td&gt;Turn right or left&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;r only&lt;/td&gt;
      &lt;td&gt;Move Forward&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;l only&lt;/td&gt;
      &lt;td&gt;Move forward&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;l and r&lt;/td&gt;
      &lt;td&gt;Move forward&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;l and c&lt;/td&gt;
      &lt;td&gt;Turn Right&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;r and c&lt;/td&gt;
      &lt;td&gt;Turn Left&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;all sensors&lt;/td&gt;
      &lt;td&gt;Turn 180 degree and Reverse.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;No Sensor&lt;/td&gt;
      &lt;td&gt;Move forward&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;(before a wall is found)&lt;/p&gt;

&lt;p&gt;9.No Sensor           STOP ,Turn Right Search for a wall,if not found come back to initial position,Then Turn Left And Search for a wall and start following it as soon as it is found.&lt;/p&gt;

&lt;p&gt;(After A wall is found)&lt;/p&gt;

&lt;p&gt;It is also made sure that the wall follower lies at a distance range of 3-10 cms from the wall According to the following table.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SENSOR ACTIVE&lt;/th&gt;
      &lt;th&gt;DISTANCE FROM WALL&lt;/th&gt;
      &lt;th&gt;RESPONSE&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Left&lt;/td&gt;
      &lt;td&gt;less than 3&lt;/td&gt;
      &lt;td&gt;Turn Right&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Left&lt;/td&gt;
      &lt;td&gt;greater than 10&lt;/td&gt;
      &lt;td&gt;Turn Left&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Right&lt;/td&gt;
      &lt;td&gt;less than 3&lt;/td&gt;
      &lt;td&gt;Turn Left&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Right&lt;/td&gt;
      &lt;td&gt;greater than 10&lt;/td&gt;
      &lt;td&gt;Turn Right&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This will be helpful in case of walls which are not straight,round walls.It can even avoid obstacles of any shape.&lt;/p&gt;

&lt;p&gt;The Robot Cannot Turn 90degree Perfectly near turnings  so there is a high chance it may  either collide with the wall or deviate slant wards.The above arrangement removes these difficulties.&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;extensions extensions--video&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/D0oTSD_81vU?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;info&quot;&gt;Multiple Authors: Satcheel Reddy Chamakoora and C.Vineel&lt;/p&gt;</content><author><name>C.Vineel</name></author><category term="arduino" /><category term="hcsr04" /><category term="l298n" /><summary type="html">Aim To follow a wall (The wall refers to a boundary line of any shape) .The robot has to simply follow the wall wherever the wall leads to, the robot must go there.</summary></entry><entry><title type="html">Interfacing 62256 SRAM using ATmega32A</title><link href="https://arc-bphc.github.io/site/2016/12/30/blog-Interfacing-SRAM.html" rel="alternate" type="text/html" title="Interfacing 62256 SRAM using ATmega32A" /><published>2016-12-30T00:00:00+05:30</published><updated>2016-12-30T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2016/12/30/blog-Interfacing-SRAM</id><content type="html" xml:base="https://arc-bphc.github.io/site/2016/12/30/blog-Interfacing-SRAM.html">&lt;h2 id=&quot;aim&quot;&gt;Aim&lt;/h2&gt;
&lt;p&gt;Interfacing of a 32k x 8 bit SRAM chip 62256 with ATmega32A microcontroller.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;
&lt;p&gt;A learning oriented project done to just ensure the correctness of the 62256 32k x 8 SRAM chips. It uses ATmega32A microcontroller burned with the “uC-SRAM-interfacing.cpp” using your AVR programmer, after compiling from avr8 gcc compiler.
&lt;img src=&quot;/site/assets/images/blog/thumbnails/Interfacing 62256 SRAM using ATmega32A.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Connect the pins of SRAM and uC as shown. Connect your uC to PC by UART-USB communication, he has used PL2303HXA for USB to UART Compile and run the “console-control-for-RAM.cpp” on your desktop/laptop computer. In the Console : “Admin :” is where you type the input command. and “Microcontroller :” is where the uC responds.
&lt;img src=&quot;/site/assets/images/blog/Interfacing-SRAM/1.png&quot; alt=&quot;Resistor&quot; width=&quot;auto&quot; height=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;here on both the sides ‘;’ is the string termination character.&lt;/p&gt;

&lt;p&gt;to read the command is: “R-{address in RAM in decimal number};” (without quotes)&lt;/p&gt;

&lt;p&gt;to write the command is: “W-{data to be written}-{address where you want to write data};” (without quotes)&lt;/p&gt;

&lt;p&gt;Example : to read from address 11322; R-11322;&lt;/p&gt;

&lt;p&gt;to write 112 to address 12136; W-112-12136;&lt;/p&gt;

&lt;p&gt;Checkout whole code used in this tutorial at his GitHub repository &lt;a href=&quot;https://github.com/RohanVDvivedi/Interfacing-62256-32Kx8bit-SRAM-using-ATmega32A&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;div&gt;&lt;div class=&quot;extensions extensions--video&quot;&gt;
  &lt;iframe src=&quot;https://www.youtube.com/embed/psKOW52DNus?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Rohan Dvivedi</name></author><category term="62256 SRM" /><category term="ATmega32A" /><category term="AVR" /><summary type="html">Aim Interfacing of a 32k x 8 bit SRAM chip 62256 with ATmega32A microcontroller.</summary></entry><entry><title type="html">Ball Picker Robot</title><link href="https://arc-bphc.github.io/site/2016/10/05/blog-Ball-Picker-Robot.html" rel="alternate" type="text/html" title="Ball Picker Robot" /><published>2016-10-05T00:00:00+05:30</published><updated>2016-10-05T00:00:00+05:30</updated><id>https://arc-bphc.github.io/site/2016/10/05/blog-Ball-Picker-Robot</id><content type="html" xml:base="https://arc-bphc.github.io/site/2016/10/05/blog-Ball-Picker-Robot.html">&lt;h2 id=&quot;aim&quot;&gt;Aim&lt;/h2&gt;
&lt;p&gt;To build a manually controlled Robot which can pick and drop (at desired location) Table Tennis balls.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;hardware-used&quot;&gt;Hardware Used&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Arduino Nano.&lt;/li&gt;
  &lt;li&gt;breadboard.&lt;/li&gt;
  &lt;li&gt;12V battery supply.&lt;/li&gt;
  &lt;li&gt;4-wheel chassis.&lt;/li&gt;
  &lt;li&gt;Buck Convertor&lt;/li&gt;
  &lt;li&gt;100 rpm motors and wheels.&lt;/li&gt;
  &lt;li&gt;castor wheel&lt;/li&gt;
  &lt;li&gt;HC-05 bluetooth module.&lt;/li&gt;
  &lt;li&gt;Micro servo&lt;/li&gt;
  &lt;li&gt;MG995(Metal gear servo)&lt;/li&gt;
  &lt;li&gt;L298 Motor Driver IC&lt;/li&gt;
  &lt;li&gt;Mechanix Kit.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;software-used&quot;&gt;Software used&lt;/h2&gt;
&lt;p&gt;Arduino IDE (you have to install CH-340 driver for  arduino nano) &amp;amp; control Joy stick app (available on play store) for Bluetooth Module.&lt;/p&gt;

&lt;h2 id=&quot;working&quot;&gt;Working&lt;/h2&gt;
&lt;p&gt;The working of the bot is simple it picks up the ball and place/drop the ball at desired location. Full mechanical design of the Bot is made using Mechanix Spares.&lt;/p&gt;

&lt;p&gt;To lift the arm Four-Bar mechanism is used and bot is controlled via bluetooth.&lt;/p&gt;
&lt;div class=&quot;swiper swiper-demo&quot;&gt;
  &lt;div class=&quot;swiper__wrapper&quot;&gt;
    &lt;div class=&quot;swiper__slide&quot;&gt;&lt;img class=&quot;image image&quot; src=&quot;/site/assets/images/blog/Ball-Picker-Robot/1.png&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;swiper__slide&quot;&gt;&lt;img class=&quot;image image&quot; src=&quot;/site/assets/images/blog/Ball-Picker-Robot/2.png&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;swiper__slide&quot;&gt;&lt;img class=&quot;image image&quot; src=&quot;/site/assets/images/blog/thumbnails/Ball Picker Robot.png&quot; /&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;swiper__button swiper__button--prev fas fa-chevron-left&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;swiper__button swiper__button--next fas fa-chevron-right&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;style&gt;
.swiper-demo {
  height: auto;
}
&lt;/style&gt;

&lt;script&gt;(function() {
  var SOURCES = window.TEXT_VARIABLES.sources;
  window.Lazyload.js(SOURCES.jquery, function() {
    function swiper(options) {
      var $window = $(window), $root = this, $swiperWrapper, $swiperSlides, $swiperButtonPrev, $swiperButtonNext,
        initialSlide, animation, onChange, onChangeEnd,
        rootWidth, count, preIndex, curIndex, translateX, CRITICAL_ANGLE = Math.PI / 3;

      function setOptions(options) {
        var _options = options || {};
        initialSlide = _options.initialSlide || 0;
        animation = _options.animation === undefined &amp;&amp; true;
        onChange = onChange || _options.onChange;
        onChangeEnd = onChangeEnd || _options.onChangeEnd;
      }

      function init() {
        $swiperWrapper = $root.find('.swiper__wrapper');
        $swiperSlides = $root.find('.swiper__slide');
        $swiperButtonPrev = $root.find('.swiper__button--prev');
        $swiperButtonNext = $root.find('.swiper__button--next');
        animation &amp;&amp; $swiperWrapper.addClass('swiper__wrapper--animation');
        calc(true);
      }

      function preCalc() {
        rootWidth = $root.width();
        count = $swiperWrapper.children('.swiper__slide').length;
        if (count &lt; 2) {
          $swiperButtonPrev.addClass('d-none');
          $swiperButtonNext.addClass('d-none');
        }
        curIndex = initialSlide || 0;
        translateX = getTranslateXFromCurIndex();
      }

      var calc = (function() {
        var preAnimation, $swiperSlide, $preSwiperSlide;
        return function (needPreCalc, params) {
          needPreCalc &amp;&amp; preCalc();
          var _animation = (params &amp;&amp; params.animation !== undefined) ? params.animation : animation;
          if (preAnimation === undefined || preAnimation !== _animation) {
            preAnimation = _animation ? $swiperWrapper.addClass('swiper__wrapper--animation') :
              $swiperWrapper.removeClass('swiper__wrapper--animation');
          }
          if (preIndex !== curIndex) {
            ($preSwiperSlide = $swiperSlides.eq(preIndex)).removeClass('active');
            ($swiperSlide = $swiperSlides.eq(curIndex)).addClass('active');
            onChange &amp;&amp; onChange(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
            if (onChangeEnd) {
              if (_animation) {
                setTimeout(function() {
                  onChangeEnd(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
                }, 400);
              } else {
                onChangeEnd(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
              }
            }
            preIndex = curIndex;
          }
          $swiperWrapper.css('transform', 'translate(' + translateX + 'px, 0)');
          if (count &gt; 1) {
            if (curIndex &lt;= 0) {
              $swiperButtonPrev.addClass('disabled');
            } else {
              $swiperButtonPrev.removeClass('disabled');
            }
            if (curIndex &gt;= count - 1) {
              $swiperButtonNext.addClass('disabled');
            } else {
              $swiperButtonNext.removeClass('disabled');
            }
          }
        };
      })();

      function getTranslateXFromCurIndex() {
        return curIndex &lt;= 0 ? 0 : - rootWidth * curIndex;
      }

      function moveToIndex(index ,params) {
        preIndex = curIndex;
        curIndex = index;
        translateX = getTranslateXFromCurIndex();
        calc(false, params);
      }

      function move(type) {
        var nextIndex = curIndex, unstableTranslateX;
        if (type === 'prev') {
          nextIndex &gt; 0 &amp;&amp; nextIndex--;
        } else if (type === 'next') {
          nextIndex &lt; count - 1 &amp;&amp; nextIndex++;
        }
        if (type === 'cur') {
          moveToIndex(curIndex, { animation: true });
          return;
        }
        unstableTranslateX = translateX % rootWidth !== 0;
        if (nextIndex !== curIndex || unstableTranslateX) {
          unstableTranslateX ? moveToIndex(nextIndex, { animation: true }) : moveToIndex(nextIndex);
        }
      }

      setOptions(options);
      init();
      preIndex = curIndex;

      $swiperButtonPrev.on('click', function(e) {
        e.stopPropagation();
        move('prev');
      });
      $swiperButtonNext.on('click', function(e) {
        e.stopPropagation();
        move('next');
      });
      $window.on('resize', function() {
        calc(true, { animation: false });
      });

      (function() {
        var pageX, pageY, velocityX, preTranslateX = translateX, timeStamp, touching;
        function handleTouchstart(e) {
          var point = e.touches ? e.touches[0] : e;
          pageX = point.pageX;
          pageY = point.pageY;
          velocityX = 0;
          preTranslateX = translateX;
        }
        function handleTouchmove(e) {
          if (e.touches &amp;&amp; e.touches.length &gt; 1) {
            return;
          }
          var point = e.touches ? e.touches[0] : e;
          var deltaX = point.pageX - pageX;
          var deltaY = point.pageY - pageY;
          velocityX = deltaX / (e.timeStamp - timeStamp);
          timeStamp = e.timeStamp;
          if (e.cancelable &amp;&amp; Math.abs(Math.atan(deltaY / deltaX)) &lt; CRITICAL_ANGLE) {
            touching = true;
            translateX += deltaX;
            calc(false, { animation: false });
          }
          pageX = point.pageX;
          pageY = point.pageY;
        }
        function handleTouchend() {
          touching = false;
          var deltaX = translateX - preTranslateX;
          var distance = deltaX + velocityX * rootWidth;
          if (Math.abs(distance) &gt; rootWidth / 2) {
            distance &gt; 0 ? move('prev') : move('next');
          } else {
            move('cur');
          }
        }
        $swiperWrapper.on('touchstart', handleTouchstart);
        $swiperWrapper.on('touchmove', handleTouchmove);
        $swiperWrapper.on('touchend', handleTouchend);
        $swiperWrapper.on('touchcancel', handleTouchend);

        (function() {
          var pressing = false, moved = false;
          $swiperWrapper.on('mousedown', function(e) {
            pressing = true; handleTouchstart(e);
          });
          $swiperWrapper.on('mousemove', function(e) {
            pressing &amp;&amp; (e.preventDefault(), moved = true, handleTouchmove(e));
          });
          $swiperWrapper.on('mouseup', function(e) {
            pressing &amp;&amp; (pressing = false, handleTouchend(e));
          });
          $swiperWrapper.on('mouseleave', function(e) {
            pressing &amp;&amp; (pressing = false, handleTouchend(e));
          });
          $swiperWrapper.on('click', function(e) {
            moved &amp;&amp; (e.stopPropagation(), moved = false);
          });
        })();

        $root.on('touchmove', function(e) {
          if (e.cancelable &amp; touching) {
            e.preventDefault();
          }
        });
      })();

      return {
        setOptions: setOptions,
        previous: function(){
          move('prev');
        },
        next: function(){
          move('next');
        },
        refresh: function() {
          calc(true, { animation: false });
        }
      };
    }
    $.fn.swiper = swiper;
  });
})();
var SOURCES = window.TEXT_VARIABLES.sources;
window.Lazyload.js(SOURCES.jquery, function() {
  $('.swiper-demo').swiper();
});
&lt;/script&gt;

&lt;p class=&quot;info&quot;&gt;Multiple Authors: Murtaza Bohra(2015 batch), Prerit Agarwal(2015 batch) &amp;amp; Ebin Philip(2014 batch)&lt;/p&gt;</content><author><name>Murtaza Bohra</name></author><category term="arduino" /><category term="hc05" /><category term="bluetooth" /><category term="servo" /><category term="l298n" /><category term="mechanix" /><summary type="html">Aim To build a manually controlled Robot which can pick and drop (at desired location) Table Tennis balls.</summary></entry></feed>