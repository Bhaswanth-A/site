I"Ω,<h2 id="aim">Aim</h2>
<p>The bot was made to play Badminton in the ROBOCON 2015 as part of the theme, declared by Televisi Republik Indonesia (TVRI) as, ‚ÄúRobominton: Badminton Robo-Game‚Äù.
<!--more--></p>

<h2 id="team">Team</h2>
<ol>
  <li>Jayanth Kanikpati(Team Lead)</li>
  <li>Mayank Shekhar</li>
  <li>Moloy Das</li>
  <li>Parth Gupta</li>
  <li>Rishabh Gupta</li>
  <li>Sanket Rout</li>
  <li>Gundu Durgarao</li>
  <li>Sonitabh Yadav</li>
  <li>Viraj Panwar</li>
  <li>Anirudh Shankar</li>
  <li>Chandan Bothra</li>
  <li>Deepak Upadhyay</li>
  <li>Dikshant Patel</li>
  <li>Goutham Varanasi</li>
  <li>Vikas AG</li>
  <li>Sidharth Sai</li>
  <li>Sujeath Pareddy</li>
  <li>Aayush Khandelwal</li>
  <li>Akshaya Agarwal</li>
  <li>Aman Nidhi</li>
  <li>Animesh Agarwal</li>
  <li>Suraj Partani</li>
</ol>

<h2 id="details">Details</h2>
<p>There were two Bots actually and were meant to play badminton‚Äôs doubles game. The highlight of this game were how the two robots hit and hit back shuttle by collaborating each other.The National ABU Robocon 2015 took place in the Badminton Hall of the Shree Shiv Chhatrapati Sports Complex, Balewadi, Pune on 7 March 2015.</p>

<p>BITS Pilani, Hyderabad campus participated first time in the competition with team leader Jayanth Kankipati and the faculty advisor YVD Rao sir. The team was sponsored by India Bank.Overall it was a good and a new experience. Both of our bots were working good, but we couldn‚Äôt win it.</p>

<h2 id="technical-details">Technical details</h2>
<p>The bot used 85 watt motors with Mecanum wheels powered by Motors and 2 lead acid batteries. The motors were operated at 24 volt. Several Servo Motors were used for the arm Mechanism and for hitting Pneumatics were used at 6 bar pressure.The gas was packed in PET containers. The bot was controlled by dummy arm Mechanism.
The other bot had everything same except the wheels it used Omni wheels.</p>

<!-- <div class="w3-content w3-display-container">
  <img class="mySlides1" src="/site/assets/images/blog/thumbnails/Badminton Playing Bot - ROBOCON 2015.png" style="width:100%">
  <img class="mySlides1" src="/site/assets/images/blog/Badminton-Playing-Bot/field.png" style="width:100%">
  <img class="mySlides1" src="/site/assets/images/blog/Badminton-Playing-Bot/room.png" style="width:100%">
  <img class="mySlides1" src="/site/assets/images/blog/Badminton-Playing-Bot/workshop1.png" style="width:100%">
  <img class="mySlides1" src="/site/assets/images/blog/Badminton-Playing-Bot/workshop2.png" style="width:100%">
  <button class="w3-button w3-black w3-display-left" onclick="plusDivs(-1, 0)">&#10094;</button>
  <button class="w3-button w3-black w3-display-right" onclick="plusDivs(1, 0)">&#10095;</button>
</div>

<script>
var slideIndex = [1,1];
var slideId = ["mySlides1"]
showDivs(1, 0);
showDivs(1, 1);

function plusDivs(n, no) {
  showDivs(slideIndex[no] += n, no);
}

function showDivs(n, no) {
  var i;
  var x = document.getElementsByClassName(slideId[no]);
  if (n > x.length) {slideIndex[no] = 1}
  if (n < 1) {slideIndex[no] = x.length}
  for (i = 0; i < x.length; i++) {
    x[i].style.display = "none";  
  }
  x[slideIndex[no]-1].style.display = "block";  
}
</script>  -->

<div class="swiper swiper-demo">
  <div class="swiper__wrapper">
    <div class="swiper__slide">
    <img src="/site/assets/images/blog/thumbnails/Badminton Playing Bot - ROBOCON 2015.png" />
    </div>
    <div class="swiper__slide">
    <img src="/site/assets/images/blog/Badminton-Playing-Bot/field.png" />
    </div>
    <div class="swiper__slide">
    <img src="/site/assets/images/blog/Badminton-Playing-Bot/workshop2.png" />
    </div>
    <div class="swiper__slide">
    <img src="/site/assets/images/blog/Badminton-Playing-Bot/room.png" />
    </div>
    <div class="swiper__slide">
      <img src="/site/assets/images/blog/Badminton-Playing-Bot/workshop1.png" />
    </div>
  </div>
  <div class="swiper__button swiper__button--prev fas fa-chevron-left"></div>
  <div class="swiper__button swiper__button--next fas fa-chevron-right"></div>
</div>

<script>(function() {
  var SOURCES = window.TEXT_VARIABLES.sources;
  window.Lazyload.js(SOURCES.jquery, function() {
    function swiper(options) {
      var $window = $(window), $root = this, $swiperWrapper, $swiperSlides, $swiperButtonPrev, $swiperButtonNext,
        initialSlide, animation, onChange, onChangeEnd,
        rootWidth, count, preIndex, curIndex, translateX, CRITICAL_ANGLE = Math.PI / 3;

      function setOptions(options) {
        var _options = options || {};
        initialSlide = _options.initialSlide || 0;
        animation = _options.animation === undefined && true;
        onChange = onChange || _options.onChange;
        onChangeEnd = onChangeEnd || _options.onChangeEnd;
      }

      function init() {
        $swiperWrapper = $root.find('.swiper__wrapper');
        $swiperSlides = $root.find('.swiper__slide');
        $swiperButtonPrev = $root.find('.swiper__button--prev');
        $swiperButtonNext = $root.find('.swiper__button--next');
        animation && $swiperWrapper.addClass('swiper__wrapper--animation');
        calc(true);
      }

      function preCalc() {
        rootWidth = $root.width();
        count = $swiperWrapper.children('.swiper__slide').length;
        if (count < 2) {
          $swiperButtonPrev.addClass('d-none');
          $swiperButtonNext.addClass('d-none');
        }
        curIndex = initialSlide || 0;
        translateX = getTranslateXFromCurIndex();
      }

      var calc = (function() {
        var preAnimation, $swiperSlide, $preSwiperSlide;
        return function (needPreCalc, params) {
          needPreCalc && preCalc();
          var _animation = (params && params.animation !== undefined) ? params.animation : animation;
          if (preAnimation === undefined || preAnimation !== _animation) {
            preAnimation = _animation ? $swiperWrapper.addClass('swiper__wrapper--animation') :
              $swiperWrapper.removeClass('swiper__wrapper--animation');
          }
          if (preIndex !== curIndex) {
            ($preSwiperSlide = $swiperSlides.eq(preIndex)).removeClass('active');
            ($swiperSlide = $swiperSlides.eq(curIndex)).addClass('active');
            onChange && onChange(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
            if (onChangeEnd) {
              if (_animation) {
                setTimeout(function() {
                  onChangeEnd(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
                }, 400);
              } else {
                onChangeEnd(curIndex, $swiperSlides.eq(curIndex), $swiperSlide, $preSwiperSlide);
              }
            }
            preIndex = curIndex;
          }
          $swiperWrapper.css('transform', 'translate(' + translateX + 'px, 0)');
          if (count > 1) {
            if (curIndex <= 0) {
              $swiperButtonPrev.addClass('disabled');
            } else {
              $swiperButtonPrev.removeClass('disabled');
            }
            if (curIndex >= count - 1) {
              $swiperButtonNext.addClass('disabled');
            } else {
              $swiperButtonNext.removeClass('disabled');
            }
          }
        };
      })();

      function getTranslateXFromCurIndex() {
        return curIndex <= 0 ? 0 : - rootWidth * curIndex;
      }

      function moveToIndex(index ,params) {
        preIndex = curIndex;
        curIndex = index;
        translateX = getTranslateXFromCurIndex();
        calc(false, params);
      }

      function move(type) {
        var nextIndex = curIndex, unstableTranslateX;
        if (type === 'prev') {
          nextIndex > 0 && nextIndex--;
        } else if (type === 'next') {
          nextIndex < count - 1 && nextIndex++;
        }
        if (type === 'cur') {
          moveToIndex(curIndex, { animation: true });
          return;
        }
        unstableTranslateX = translateX % rootWidth !== 0;
        if (nextIndex !== curIndex || unstableTranslateX) {
          unstableTranslateX ? moveToIndex(nextIndex, { animation: true }) : moveToIndex(nextIndex);
        }
      }

      setOptions(options);
      init();
      preIndex = curIndex;

      $swiperButtonPrev.on('click', function(e) {
        e.stopPropagation();
        move('prev');
      });
      $swiperButtonNext.on('click', function(e) {
        e.stopPropagation();
        move('next');
      });
      $window.on('resize', function() {
        calc(true, { animation: false });
      });

      (function() {
        var pageX, pageY, velocityX, preTranslateX = translateX, timeStamp, touching;
        function handleTouchstart(e) {
          var point = e.touches ? e.touches[0] : e;
          pageX = point.pageX;
          pageY = point.pageY;
          velocityX = 0;
          preTranslateX = translateX;
        }
        function handleTouchmove(e) {
          if (e.touches && e.touches.length > 1) {
            return;
          }
          var point = e.touches ? e.touches[0] : e;
          var deltaX = point.pageX - pageX;
          var deltaY = point.pageY - pageY;
          velocityX = deltaX / (e.timeStamp - timeStamp);
          timeStamp = e.timeStamp;
          if (e.cancelable && Math.abs(Math.atan(deltaY / deltaX)) < CRITICAL_ANGLE) {
            touching = true;
            translateX += deltaX;
            calc(false, { animation: false });
          }
          pageX = point.pageX;
          pageY = point.pageY;
        }
        function handleTouchend() {
          touching = false;
          var deltaX = translateX - preTranslateX;
          var distance = deltaX + velocityX * rootWidth;
          if (Math.abs(distance) > rootWidth / 2) {
            distance > 0 ? move('prev') : move('next');
          } else {
            move('cur');
          }
        }
        $swiperWrapper.on('touchstart', handleTouchstart);
        $swiperWrapper.on('touchmove', handleTouchmove);
        $swiperWrapper.on('touchend', handleTouchend);
        $swiperWrapper.on('touchcancel', handleTouchend);

        (function() {
          var pressing = false, moved = false;
          $swiperWrapper.on('mousedown', function(e) {
            pressing = true; handleTouchstart(e);
          });
          $swiperWrapper.on('mousemove', function(e) {
            pressing && (e.preventDefault(), moved = true, handleTouchmove(e));
          });
          $swiperWrapper.on('mouseup', function(e) {
            pressing && (pressing = false, handleTouchend(e));
          });
          $swiperWrapper.on('mouseleave', function(e) {
            pressing && (pressing = false, handleTouchend(e));
          });
          $swiperWrapper.on('click', function(e) {
            moved && (e.stopPropagation(), moved = false);
          });
        })();

        $root.on('touchmove', function(e) {
          if (e.cancelable & touching) {
            e.preventDefault();
          }
        });
      })();

      return {
        setOptions: setOptions,
        previous: function(){
          move('prev');
        },
        next: function(){
          move('next');
        },
        refresh: function() {
          calc(true, { animation: false });
        }
      };
    }
    $.fn.swiper = swiper;
  });
})();
var SOURCES = window.TEXT_VARIABLES.sources;
window.Lazyload.js(SOURCES.jquery, function() {
  $('.swiper-demo').swiper();
});
</script>

:ET